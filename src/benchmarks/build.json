[
    {
        "command": "minmax --log=error --n=6 --game-name=nim --init=initial_S.lp --out=S.json --tree-name=S.json",
        "args": {
            "log": "error",
            "game_name": "nim",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_S.lp",
            "num_repetitions": 6,
            "benchmark_output_file": "S.json",
            "selected_approach": "minmax",
            "tree_image_file_name": null,
            "tree_name": "S.json",
            "main_player": "a"
        },
        "initial_state": "control(a).has(1,2).has(2,2).has(3,3).has(4,0)",
        "results": {
            "player": "minmax",
            "build": [
                1742.403,
                2015.139,
                1862.507,
                1734.817,
                1845.103,
                1768.083
            ],
            "average_build": 1828.009,
            "std": 96.699,
            "special_results": {
                "number_of_nodes": 390,
                "number_of_nodes_prop": 1,
                "save_time": 4.406
            }
        }
    },
    {
        "command": "pruned_minmax --log=error --n=6 --game-name=nim --init=initial_S.lp --out=S.json --tree-name=S.json",
        "args": {
            "log": "error",
            "game_name": "nim",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_S.lp",
            "num_repetitions": 6,
            "benchmark_output_file": "S.json",
            "selected_approach": "pruned_minmax",
            "tree_image_file_name": null,
            "tree_name": "S.json",
            "main_player": "a",
            "ilasp_examples_file_name": null,
            "rules_file_name": null,
            "train_file_name": null,
            "first_build": false
        },
        "initial_state": "control(a).has(1,2).has(2,2).has(3,3).has(4,0)",
        "results": {
            "player": "pruned_minmax",
            "build": [
                2939.724,
                2923.912,
                2880.385,
                2932.718,
                2880.741,
                2887.122
            ],
            "average_build": 2907.434,
            "std": 25.2,
            "special_results": {
                "number_of_nodes": 83,
                "number_of_nodes_prop": 0.21,
                "save_time": 1.767
            }
        }
    },
    {
        "command": "pruned_minmax --log=error --n=6 --game-name=nim --init=initial_S.lp --out=S.json --rules=S.lp",
        "args": {
            "log": "error",
            "game_name": "nim",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_S.lp",
            "num_repetitions": 6,
            "benchmark_output_file": "S.json",
            "selected_approach": "pruned_minmax",
            "tree_image_file_name": null,
            "tree_name": null,
            "main_player": "a",
            "ilasp_examples_file_name": null,
            "rules_file_name": "S.lp",
            "train_file_name": null,
            "first_build": false
        },
        "initial_state": "control(a).has(1,2).has(2,2).has(3,3).has(4,0)",
        "results": {
            "player": "pruned_minmax_learning",
            "build": [
                1641.701,
                1662.451,
                1714.966,
                1682.596,
                1803.072,
                1807.128
            ],
            "average_build": 1718.652,
            "std": 64.998,
            "special_results": {
                "number_of_nodes": 35,
                "number_of_nodes_prop": 0.08,
                "save_time": 1.034
            }
        }
    },
    {
        "command": "ilasp --log=error --n=6 --game-name=nim --init=initial_S.lp --out=S.json --strategy-name=S.lp --background-path=./approaches/ilasp/nim/background.lp",
        "args": {
            "log": "error",
            "game_name": "nim",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_S.lp",
            "num_repetitions": 6,
            "benchmark_output_file": "S.json",
            "selected_approach": "ilasp",
            "main_player": "a",
            "ilasp_examples_file_name": "temp_examples.las",
            "language_bias_name": "final.las",
            "background_path": "./approaches/ilasp/nim/background.lp",
            "strategy_name": "S.lp",
            "ilasp_arg": null,
            "rules_file_name": null,
            "tree_image_file_name": null,
            "train_file_name": null,
            "tree_name": null,
            "first_build": false
        },
        "initial_state": "control(a).has(1,2).has(2,2).has(3,3).has(4,0)",
        "results": {
            "player": "ilasp",
            "build": [
                3420.022,
                490.24,
                486.18,
                490.896,
                492.324,
                498.75
            ],
            "average_build": 979.735,
            "std": 1091.336,
            
            "special_results": {
                "save_time": 0.409,
                "number_of_nodes_prop": 0.21,
                "number_of_nodes": 83
            }
        }
    },
    {
        "command": "minmax --log=error --n=3 --game-name=nim --init=initial_M.lp --out=M.json --tree-name=M.json",
        "args": {
            "log": "error",
            "game_name": "nim",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_M.lp",
            "num_repetitions": 3,
            "benchmark_output_file": "M.json",
            "selected_approach": "minmax",
            "tree_image_file_name": null,
            "tree_name": "M.json",
            "main_player": "a"
        },
        "initial_state": "control(a).has(1,1).has(2,2).has(3,3).has(4,3)",
        "results": {
            "player": "minmax",
            "build": [
                19451.128,
                19453.582,
                19053.077
            ],
            "average_build": 19319.262,
            "std": 188.224,
            "special_results": {
                "number_of_nodes": 4630,
                "number_of_nodes_prop": 1,
                "save_time": 42.488
            }
        }
    },
    {
        "command": "pruned_minmax --log=error --n=3 --game-name=nim --init=initial_M.lp --out=M.json --tree-name=M.json",
        "args": {
            "log": "error",
            "game_name": "nim",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_M.lp",
            "num_repetitions": 3,
            "benchmark_output_file": "M.json",
            "selected_approach": "pruned_minmax",
            "tree_image_file_name": null,
            "tree_name": "M.json",
            "main_player": "a",
            "ilasp_examples_file_name": null,
            "rules_file_name": null,
            "train_file_name": null,
            "first_build": false
        },
        "initial_state": "control(a).has(1,1).has(2,2).has(3,3).has(4,3)",
        "results": {
            "player": "pruned_minmax",
            "build": [
                13405.098,
                12840.628,
                12777.647
            ],
            "average_build": 13007.791,
            "std": 282.113,
            "special_results": {
                "number_of_nodes": 347,
                "number_of_nodes_prop": 0.07,
                "save_time": 5.244
            }
        }
    },
    {
        "command": "pruned_minmax --log=error --n=3 --game-name=nim --init=initial_M.lp --out=M.json --rules=M.lp",
        "args": {
            "log": "error",
            "game_name": "nim",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_M.lp",
            "num_repetitions": 3,
            "benchmark_output_file": "M.json",
            "selected_approach": "pruned_minmax",
            "tree_image_file_name": null,
            "tree_name": null,
            "main_player": "a",
            "ilasp_examples_file_name": null,
            "rules_file_name": "M.lp",
            "train_file_name": null,
            "first_build": false
        },
        "initial_state": "control(a).has(1,1).has(2,2).has(3,3).has(4,3)",
        "results": {
            "player": "pruned_minmax_learning",
            "build": [
                4657.496,
                4657.541,
                4683.102
            ],
            "average_build": 4666.046,
            "std": 12.06,
            "special_results": {
                "number_of_nodes": 85,
                "number_of_nodes_prop": 0.018,
                "save_time": 6.681
            }
        }
    },
    {
        "command": "ilasp --log=error --n=3 --game-name=nim --init=initial_M.lp --out=M.json --strategy-name=M.lp --background-path=./approaches/ilasp/nim/background.lp",
        "args": {
            "log": "error",
            "game_name": "nim",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_M.lp",
            "num_repetitions": 3,
            "benchmark_output_file": "M.json",
            "selected_approach": "ilasp",
            "main_player": "a",
            "ilasp_examples_file_name": "temp_examples.las",
            "language_bias_name": "final.las",
            "background_path": "./approaches/ilasp/nim/background.lp",
            "strategy_name": "M.lp",
            "ilasp_arg": null,
            "rules_file_name": null,
            "tree_image_file_name": null,
            "train_file_name": null,
            "tree_name": null,
            "first_build": false
        },
        "initial_state": "control(a).has(1,1).has(2,2).has(3,3).has(4,3)",
        "results": {
            "player": "ilasp",
            "build": [
                14507.198,
                1593.35,
                1566.533
            ],
            "average_build": 5889.027,
            "std": 6093.977,
            "special_results": {
                "save_time": 0.572,
                "number_of_nodes_prop": 0.07
            }
        }
    },
    {
        "command": "minmax --log=error --n=1 --game-name=nim --init=initial_L.lp --out=L.json --tree-name=L.json",
        "args": {
            "log": "error",
            "game_name": "nim",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_L.lp",
            "num_repetitions": 1,
            "benchmark_output_file": "L.json",
            "selected_approach": "minmax",
            "tree_image_file_name": null,
            "tree_name": "L.json",
            "main_player": "a"
        },
        "initial_state": "control(a).has(1,1).has(2,3).has(3,3).has(4,4)",
        "results": {
            "player": "minmax",
            "build": [
                269259.488
            ],
            "average_build": 269259.488,
            "std": 0.0,
            "special_results": {
                "number_of_nodes": 61023,
                "number_of_nodes_prop": 1,
                "save_time": 570.819
            }
        }
    },
    {
        "command": "pruned_minmax --log=error --n=1 --game-name=nim --init=initial_L.lp --out=L.json --tree-name=L.json",
        "args": {
            "log": "error",
            "game_name": "nim",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_L.lp",
            "num_repetitions": 1,
            "benchmark_output_file": "L.json",
            "selected_approach": "pruned_minmax",
            "tree_image_file_name": null,
            "tree_name": "L.json",
            "main_player": "a",
            "ilasp_examples_file_name": null,
            "rules_file_name": null,
            "train_file_name": null,
            "first_build": false
        },
        "initial_state": "control(a).has(1,1).has(2,3).has(3,3).has(4,4)",
        "results": {
            "player": "pruned_minmax",
            "build": [
                122541.024
            ],
            "average_build": 122541.024,
            "std": 0.0,
            "special_results": {
                "number_of_nodes": 2675,
                "number_of_nodes_prop": 0.04, 
                "save_time": 44.303
            }
        }
    },
    {
        "command": "pruned_minmax --log=error --n=1 --game-name=nim --init=initial_L.lp --out=L.json --rules=L.lp",
        "args": {
            "log": "error",
            "game_name": "nim",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_L.lp",
            "num_repetitions": 1,
            "benchmark_output_file": "L.json",
            "selected_approach": "pruned_minmax",
            "tree_image_file_name": null,
            "tree_name": null,
            "main_player": "a",
            "ilasp_examples_file_name": null,
            "rules_file_name": "L.lp",
            "train_file_name": null,
            "first_build": false
        },
        "initial_state": "control(a).has(1,1).has(2,3).has(3,3).has(4,4)",
        "results": {
            "player": "pruned_minmax_learning",
            "build": [
                28277.556
            ],
            "average_build": 28277.556,
            "std": 0.0,
            "special_results": {
                "number_of_nodes": 283,
                "number_of_nodes_prop": 0.004,
                "save_time": 8.92
            }
        }
    },
    {
        "command": "ilasp --log=error --n=1 --game-name=nim --init=initial_L.lp --out=L.json --strategy-name=L.lp --background-path=./approaches/ilasp/nim/background.lp",
        "args": {
            "log": "error",
            "game_name": "nim",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_L.lp",
            "num_repetitions": 1,
            "benchmark_output_file": "L.json",
            "selected_approach": "ilasp",
            "main_player": "a",
            "ilasp_examples_file_name": "temp_examples.las",
            "language_bias_name": "final.las",
            "background_path": "./approaches/ilasp/nim/background.lp",
            "strategy_name": "L.lp",
            "ilasp_arg": null,
            "rules_file_name": null,
            "tree_image_file_name": null,
            "train_file_name": null,
            "tree_name": null,
            "first_build": false
        },
        "initial_state": "control(a).has(1,1).has(2,3).has(3,3).has(4,4)",
        "results": {
            "player": "ilasp",
            "build": [
                144289.398
            ],
            "average_build": 144289.398,
            "std": 0.0,
            "special_results": {
                "save_time": 0.527,
                "number_of_nodes_prop": 0.04
            }
        }
    },
    {
        "command": "minmax --log=error --n=6 --game-name=ttt --init=initial_S.lp --out=S.json --tree-name=S.json",
        "args": {
            "log": "error",
            "game_name": "ttt",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_S.lp",
            "num_repetitions": 6,
            "benchmark_output_file": "S.json",
            "selected_approach": "minmax",
            "tree_image_file_name": null,
            "tree_name": "S.json",
            "main_player": "a"
        },
        "initial_state": "control(a).free(cell(1,3)).free(cell(2,1)).free(cell(2,2)).free(cell(2,3)).free(cell(3,1)).free(cell(3,2)).has(a,cell(1,2)).has(b,cell(1,1)).has(b,cell(3,3))",
        "results": {
            "player": "minmax",
            "build": [
                4048.419,
                4027.635,
                4057.856,
                4083.235,
                3981.817,
                4078.879
            ],
            "average_build": 4046.307,
            "std": 34.327,
            "special_results": {
                "number_of_nodes": 896,
                "number_of_nodes_prop ":1,
                "save_time": 10.604
            }
        }
    },
    {
        "command": "pruned_minmax --log=error --n=6 --game-name=ttt --init=initial_S.lp --out=S.json --tree-name=S.json",
        "args": {
            "log": "error",
            "game_name": "ttt",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_S.lp",
            "num_repetitions": 6,
            "benchmark_output_file": "S.json",
            "selected_approach": "pruned_minmax",
            "tree_image_file_name": null,
            "tree_name": "S.json",
            "main_player": "a",
            "ilasp_examples_file_name": null,
            "rules_file_name": null,
            "train_file_name": null,
            "first_build": false
        },
        "initial_state": "control(a).free(cell(1,3)).free(cell(2,1)).free(cell(2,2)).free(cell(2,3)).free(cell(3,1)).free(cell(3,2)).has(a,cell(1,2)).has(b,cell(1,1)).has(b,cell(3,3))",
        "results": {
            "player": "pruned_minmax",
            "build": [
                1244.978,
                1158.447,
                1137.58,
                1187.367,
                1235.775,
                1180.298
            ],
            "average_build": 1190.741,
            "std": 38.642,
            "special_results": {
                "number_of_nodes": 105,
                "number_of_nodes_prop ":0.11,
                "save_time": 2.523
            }
        }
    },
    {
        "command": "pruned_minmax --log=error --n=6 --game-name=ttt --init=initial_S.lp --out=S.json --rules=S.lp",
        "args": {
            "log": "error",
            "game_name": "ttt",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_S.lp",
            "num_repetitions": 6,
            "benchmark_output_file": "S.json",
            "selected_approach": "pruned_minmax",
            "tree_image_file_name": null,
            "tree_name": null,
            "main_player": "a",
            "ilasp_examples_file_name": null,
            "rules_file_name": "S.lp",
            "train_file_name": null,
            "first_build": false
        },
        "initial_state": "control(a).free(cell(1,3)).free(cell(2,1)).free(cell(2,2)).free(cell(2,3)).free(cell(3,1)).free(cell(3,2)).has(a,cell(1,2)).has(b,cell(1,1)).has(b,cell(3,3))",
        "results": {
            "player": "pruned_minmax_learning",
            "build": [
                3804.944,
                3808.861,
                3784.524,
                3722.119,
                3824.755,
                3888.446
            ],
            "average_build": 3805.608,
            "std": 49.421,
            "special_results": {
                "number_of_nodes": 109,
                "number_of_nodes_prop ":0.12,
                "save_time": 2.32
            }
        }
    },
    {
        "command": "ilasp --log=error --n=6 --game-name=ttt --init=initial_S.lp --out=S.json --strategy-name=S.lp --background-path=./game_definitions/ttt/background.lp",
        "args": {
            "log": "error",
            "game_name": "ttt",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_S.lp",
            "num_repetitions": 6,
            "benchmark_output_file": "S.json",
            "selected_approach": "ilasp",
            "main_player": "a",
            "ilasp_examples_file_name": "temp_examples.las",
            "language_bias_name": "final.las",
            "background_path": "./game_definitions/ttt/background.lp",
            "strategy_name": "S.lp",
            "ilasp_arg": null,
            "rules_file_name": null,
            "tree_image_file_name": null,
            "train_file_name": null,
            "tree_name": null,
            "first_build": false
        },
        "initial_state": "control(a).free(cell(1,3)).free(cell(2,1)).free(cell(2,2)).free(cell(2,3)).free(cell(3,1)).free(cell(3,2)).has(a,cell(1,2)).has(b,cell(1,1)).has(b,cell(3,3))",
        "results": {
            "player": "ilasp",
            "build": [
                47124.523,
                45117.322,
                45229.067,
                45126.333,
                45607.415,
                44726.387
            ],
            "average_build": 45488.508,
            "std": 775.432,
            "special_results": {
                "save_time": 0.52,
                "number_of_nodes_prop ":0.11
            }
        }
    },
    {
        "command": "minmax --log=error --n=3 --game-name=ttt --init=initial_M.lp --out=M.json --tree-name=M.json",
        "args": {
            "log": "error",
            "game_name": "ttt",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_M.lp",
            "num_repetitions": 3,
            "benchmark_output_file": "M.json",
            "selected_approach": "minmax",
            "tree_image_file_name": null,
            "tree_name": "M.json",
            "main_player": "a"
        },
        "initial_state": "control(a).free(cell(1,1)).free(cell(1,2)).free(cell(1,3)).free(cell(2,1)).free(cell(2,2)).free(cell(2,3)).free(cell(3,2)).has(a,cell(3,1)).has(b,cell(3,3))",
        "results": {
            "player": "minmax",
            "build": [
                30624.496,
                31502.358,
                31299.235
            ],
            "average_build": 31142.03,
            "std": 375.229,
            "special_results": {
                "number_of_nodes": 7583,
                "number_of_nodes_prop ":1,
                "save_time": 85.296
            }
        }
    },
    {
        "command": "pruned_minmax --log=error --n=3 --game-name=ttt --init=initial_M.lp --out=M.json --tree-name=M.json",
        "args": {
            "log": "error",
            "game_name": "ttt",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_M.lp",
            "num_repetitions": 3,
            "benchmark_output_file": "M.json",
            "selected_approach": "pruned_minmax",
            "tree_image_file_name": null,
            "tree_name": "M.json",
            "main_player": "a",
            "ilasp_examples_file_name": null,
            "rules_file_name": null,
            "train_file_name": null,
            "first_build": false
        },
        "initial_state": "control(a).free(cell(1,1)).free(cell(1,2)).free(cell(1,3)).free(cell(2,1)).free(cell(2,2)).free(cell(2,3)).free(cell(3,2)).has(a,cell(3,1)).has(b,cell(3,3))",
        "results": {
            "player": "pruned_minmax",
            "build": [
                886.513,
                881.938,
                885.992
            ],
            "average_build": 884.814,
            "std": 2.045,
            "special_results": {
                "number_of_nodes": 73,
                "number_of_nodes_prop": 0.009,
                "save_time": 1.948
            }
        }
    },
    {
        "command": "pruned_minmax --log=error --n=3 --game-name=ttt --init=initial_M.lp --out=M.json --rules=M.lp",
        "args": {
            "log": "error",
            "game_name": "ttt",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_M.lp",
            "num_repetitions": 3,
            "benchmark_output_file": "M.json",
            "selected_approach": "pruned_minmax",
            "tree_image_file_name": null,
            "tree_name": null,
            "main_player": "a",
            "ilasp_examples_file_name": null,
            "rules_file_name": "M.lp",
            "train_file_name": null,
            "first_build": false
        },
        "initial_state": "control(a).free(cell(1,1)).free(cell(1,2)).free(cell(1,3)).free(cell(2,1)).free(cell(2,2)).free(cell(2,3)).free(cell(3,2)).has(a,cell(3,1)).has(b,cell(3,3))",
        "results": {
            "player": "pruned_minmax_learning",
            "build": [
                1362.257,
                1355.042,
                1390.974
            ],
            "average_build": 1369.424,
            "std": 15.52,
            "special_results": {
                "number_of_nodes": 61,
                "save_time": 3.68,
                "number_of_nodes_prop": 0.008
            }
        }
    },
    {
        "command": "ilasp --log=error --n=3 --game-name=ttt --init=initial_M.lp --out=M.json --strategy-name=M.lp --background-path=./game_definitions/ttt/background.lp",
        "args": {
            "log": "error",
            "game_name": "ttt",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_M.lp",
            "num_repetitions": 3,
            "benchmark_output_file": "M.json",
            "selected_approach": "ilasp",
            "main_player": "a",
            "ilasp_examples_file_name": "temp_examples.las",
            "language_bias_name": "final.las",
            "background_path": "./game_definitions/ttt/background.lp",
            "strategy_name": "M.lp",
            "ilasp_arg": null,
            "rules_file_name": null,
            "tree_image_file_name": null,
            "train_file_name": null,
            "tree_name": null,
            "first_build": false
        },
        "initial_state": "control(a).free(cell(1,1)).free(cell(1,2)).free(cell(1,3)).free(cell(2,1)).free(cell(2,2)).free(cell(2,3)).free(cell(3,2)).has(a,cell(3,1)).has(b,cell(3,3))",
        "results": {
            "player": "ilasp",
            "build": [
                19815.501,
                18338.106,
                18699.646
            ],
            "average_build": 18951.084,
            "std": 628.803,
            "special_results": {
                "save_time": 0.49,
                "number_of_nodes_prop": 0.009
            }
        }
    },
    {
        "command": "minmax --log=error --n=1 --game-name=ttt --init=initial_L.lp --out=L.json --tree-name=L.json",
        "args": {
            "log": "error",
            "game_name": "ttt",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_L.lp",
            "num_repetitions": 1,
            "benchmark_output_file": "L.json",
            "selected_approach": "minmax",
            "tree_image_file_name": null,
            "tree_name": "L.json",
            "main_player": "a"
        },
        "initial_state": "control(b).free(cell(1,1)).free(cell(1,2)).free(cell(2,1)).free(cell(2,2)).free(cell(2,3)).free(cell(3,1)).free(cell(3,2)).free(cell(3,3)).has(a,cell(1,3))",
        "results": {
            "player": "minmax",
            "build": [
                242845.095
            ],
            "average_build": 242845.095,
            "std": 0.0,
            "special_results": {
                "number_of_nodes": 59704,
                "number_of_nodes_prop":1,
                "save_time": 658.554
            }
        }
    },
    {
        "command": "pruned_minmax --log=error --n=1 --game-name=ttt --init=initial_L.lp --out=L.json --tree-name=L.json",
        "args": {
            "log": "error",
            "game_name": "ttt",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_L.lp",
            "num_repetitions": 1,
            "benchmark_output_file": "L.json",
            "selected_approach": "pruned_minmax",
            "tree_image_file_name": null,
            "tree_name": "L.json",
            "main_player": "a",
            "ilasp_examples_file_name": null,
            "rules_file_name": null,
            "train_file_name": null,
            "first_build": false
        },
        "initial_state": "control(b).free(cell(1,1)).free(cell(1,2)).free(cell(2,1)).free(cell(2,2)).free(cell(2,3)).free(cell(3,1)).free(cell(3,2)).free(cell(3,3)).has(a,cell(1,3))",
        "results": {
            "player": "pruned_minmax",
            "build": [
                42064.56
            ],
            "average_build": 42064.56,
            "std": 0.0,
            "special_results": {
                "number_of_nodes": 2835,
                "number_of_nodes_prop":0.04,
                "save_time": 58.398
            }
        }
    },
    {
        "command": "pruned_minmax --log=error --n=1 --game-name=ttt --init=initial_L.lp --out=L.json --rules=L.lp",
        "args": {
            "log": "error",
            "game_name": "ttt",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_L.lp",
            "num_repetitions": 1,
            "benchmark_output_file": "L.json",
            "selected_approach": "pruned_minmax",
            "tree_image_file_name": null,
            "tree_name": null,
            "main_player": "a",
            "ilasp_examples_file_name": null,
            "rules_file_name": "L.lp",
            "train_file_name": null,
            "first_build": false
        },
        "initial_state": "control(b).free(cell(1,1)).free(cell(1,2)).free(cell(2,1)).free(cell(2,2)).free(cell(2,3)).free(cell(3,1)).free(cell(3,2)).free(cell(3,3)).has(a,cell(1,3))",
        "results": {
            "player": "pruned_minmax_learning",
            "build": [
                1112917.753
            ],
            "average_build": 1112917.753,
            "std": 0.0,
            "special_results": {
                "number_of_nodes": 2399,
                "number_of_nodes_prop":0.04,
                "save_time": 23.344
            }
        }
    }

]